<?xml version="1.0"?>
<project name="gnuprolog" default="build">

	<target name="init">
		<loadproperties srcFile="src/gnu/prolog/version.properties">
			<filterchain>
				<deletecharacters chars=" \t" />
			</filterchain>
		</loadproperties>

		<mkdir dir="build" />
		<mkdir dir="dist" />

		<property name="name.friendly" value="GNU Prolog for Java" />
		<property name="url.website" value="http://gnuprologjava.sourceforge.net" />

		<property name="version" value="${gnu.prolog.version.major}.${gnu.prolog.version.minor}.${gnu.prolog.version.revision}" />
		<property name="ant.build.javac.target" value="1.5" />
		<property name="ant.build.javac.source" value="1.5" />
	</target>

	<target name="clean" description="Clean all generated content">
		<delete dir="build" />
		<delete dir="dist" />
	</target>

	<target name="build" depends="jar" description="Build all the sources" />

	<target name="rebuild" depends="clean,build" description="Perform a clean rebuild of the project" />

	<target name="jar" depends="compile">
		<copy todir="build/code">
			<fileset dir="src">
				<include name="**/*.pro" />
				<include name="**/*.properties" />
			</fileset>
		</copy>
		<jar destfile="build/${ant.project.name}-${version}.jar" basedir="build/code">
			<manifest>
				<attribute name="Main-Class" value="gnu.prolog.test.GoalRunner" />
				<section name="gnu/prolog/">
					<attribute name="Specification-Title" value="${name.friendly}" />
					<attribute name="Specification-Version" value="${version}" />
					<attribute name="Specification-Vendor" value="${url.website}" />
					<attribute name="Implementation-Vendor" value="${url.website}" />
					<attribute name="Implementation-Version" value="${version}" />
					<attribute name="Implementation-Title" value="${name.friendly}" />
				</section>
			</manifest>
		</jar>
	</target>

	<target name="compile" depends="init">
		<mkdir dir="build/code" />
		<javac srcdir="src" destdir="build/code" />
	</target>

	<target name="dist" depends="build,docs">
		<zip destfile="dist/${ant.project.name}-${version}.zip">
			<fileset dir="build">
				<include name="${ant.project.name}-${version}.jar" />
				<include name="api/**" />
			</fileset>
			<fileset dir="docs">
				<include name="readme.txt" />
				<include name="copyleft.txt" />
			</fileset>
			<fileset dir="${basedir}">
				<include name="changes.txt" />
			</fileset>
		</zip>
	</target>

	<target name="dist-src" depends="init">
		<zip destfile="dist/${ant.project.name}-${version}-src.zip">
			<fileset dir="${basedir}">
				<include name="src/**" />
				<include name="build.xml" />
				<include name="changes.txt" />
				<include name="docs/readme.txt" />
				<include name="docs/copyleft.txt" />
			</fileset>
		</zip>
	</target>

	<target name="docs" depends="init">
		<mkdir dir="build/api" />
		<javadoc sourcepath="src" destdir="build/api" version="yes" author="yes" use="yes">
			<packageset dir="src">
				<include name="gnu/prolog/**" />
			</packageset>
			<header>
				&lt;a href="${url.website}" target="_top"&gt;${name.friendly}&lt;/a&gt;
			</header>
			<footer>
				&lt;a href="${url.website}" target="_top"&gt;${name.friendly}&lt;/a&gt;
			</footer>
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
		</javadoc>
	</target>

	<target name="test" depends="build,test-vanilla" description="Execute tests">
	</target>

	<target name="test-vanilla">
		<!-- verify output -->
		<java jar="build/${ant.project.name}-${version}.jar" dir="test/vanilla_stock" fork="true" logerror="true" output="test/test.out">
			<arg value="-once" />
			<arg value="gnuprologjava.pl" />
			<arg value="validate" />
		</java>
	</target>

	<!--
		<target name="site" depends="javadoc">
		<delete dir="${build.dir}/site" />
		<delete file="${build.dir}/site.zip" />
		<mkdir dir="${build.dir}/site" />
		<filter token="version" value="${_version}" />
		<copy file="${basedir}/site/index.html" todir="${build.dir}/site" filtering="on">
		</copy>
		<copy todir="${build.dir}/site/api">
			<fileset dir="${build.dir}/api" />
		</copy>
		<zip zipfile="${build.dir}/site/vanila.zip" basedir="${basedir}/test" />
		<zip zipfile="${build.dir}/site.zip" basedir="${build.dir}/site" />
	</target>

-->

</project>

